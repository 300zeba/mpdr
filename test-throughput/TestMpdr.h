#ifndef TEST_MPDR_H
#define TEST_MPDR_H

#define MSG_SIZE 98

enum {
  LOG_INITIALIZED,
  LOG_DESTINATION_NODE,
  LOG_SOURCE_NODE,
  LOG_RELAY_NODE,
  LOG_GET_RELAY_CHANNEL_ERROR,
  LOG_ERROR_MPDR_SEND,
  LOG_ERROR_MPDR_SEND_DONE,
  LOG_MSG_ERROR_I,
  LOG_MSG_ERROR_DATA,
  LOG_TEST_NUMBER,
  LOG_SENT_RADIO_1,
  LOG_SENT_RADIO_2,
  LOG_RECEIVED_RADIO_1,
  LOG_RECEIVED_RADIO_2,
  LOG_ELAPSED_TIME,
  LOG_MESSAGE_SIZE,
  LOG_PAYLOAD_SIZE,
  LOG_REQUEST_ACK_1_ERROR,
  LOG_ENQUEUEING_RADIO_1,
  LOG_REQUEST_ACK_2_ERROR,
  LOG_ENQUEUEING_RADIO_2,
  LOG_DROP_COUNT,
  LOG_RADIO_2_ENQUEUE_RESULT,
  LOG_RADIO_1_ENQUEUE_RESULT,
  LOG_SEND_DONE_1_ERROR,
  LOG_SEND_DONE_2_ERROR,
  LOG_RADIO_NUMBER_ERROR,
  LOG_CHANNEL_NUMBER_ERROR,
  LOG_SET_RADIO_1_CHANNEL,
  LOG_SET_RADIO_1_CHANNEL_OK,
  LOG_SET_RADIO_1_CHANNEL_ERROR,
  LOG_SET_RADIO_2_CHANNEL,
  LOG_SET_RADIO_2_CHANNEL_OK,
  LOG_SET_RADIO_2_CHANNEL_ERROR,
  LOG_CHANGE_CHANNEL_ATTEMPTS,
  LOG_RCV_ROUTING_LAST_HOP,
  LOG_RCV_ROUTING_LAST_RADIO,
  LOG_RCV_ROUTING_LAST_CHANNEL,
  LOG_SEND_1_ERROR,
  LOG_SEND_2_ERROR,
  LOG_MESSAGE_POOL_ERROR,
  LOG_RECEIVED_RADIO_1_SEQNO,
  LOG_RECEIVED_RADIO_2_SEQNO,
  LOG_RADIO_1_SEND_RESULT,
  LOG_RADIO_2_SEND_RESULT,
  LOG_RADIO_1_SEND_RESULT_2,
  LOG_RADIO_2_SEND_RESULT_2,
  LOG_SENDING_SEQNO,
  LOG_TEST_TIMER_FIRED,
  LOG_QUEUE_1_ERROR,
  LOG_QUEUE_2_ERROR,
  LOG_RADIO_1_TIME,
  LOG_RADIO_2_TIME,
  LOG_RETRANSMISSIONS,
  LOG_DROPPED,
  LOG_MAX_QUEUE_1,
  LOG_MAX_QUEUE_2,
};

typedef nx_struct mpdr_test_msg {
  nx_uint16_t seqno;
  nx_uint8_t data[MSG_SIZE];
} mpdr_test_msg_t;

#endif
